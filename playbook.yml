---
 - name: ansible
   hosts: all
   become: yes
   become_user: root
   
   tasks:
     - name: Install (git, apache2 unzip, curl)
       apt:
         pkg:
           - apache2
           - unzip
           - curl
           - git
           - wget
           - software-properties-common
         update_cache: yes

     # tasks file for php
     
     - name: php packages
       apt:
         pkg: 
           - php8.1 
           - libapache2-mod-php 
           - php8.1-dev 
           - php8.1-zip 
           - php8.1-curl 
           - php8.1-mbstring 
           - php8.1-mysql 
           - php8.1-gd 
           - php8.1-xml
         update_cache: yes
  
     - name: ensure php8-fpm cgi.fix_pathinfo=0
       lineinfile: dest=/etc/php/8.1/apache2/php.ini regexp='^(.*)cgi.fix_pathinfo=' line=cgi.fix_pathinfo=0 

     - name: Update apt
       apt:
         update_cache: yes
         autoclean: yes

    # firewall stuff
     - name: Allow HTTP
       ufw:
         rule: allow
         port: "80"
         proto: tcp

     - name: Allow HTTPS
       ufw:
         rule: allow
         port: "433"
         proto: tcp

     - name: Allow SSH
       ufw:
         rule: allow
         port: "22"
         proto: tcp

     - name: Allow MySQL
       ufw:
         rule: allow
         port: "3306"
         proto: tcp

 # database
     - name: Update apt
       apt:
         update_cache: yes
         autoclean: yes
         autoremove: yes

     - name: Install Python3
       apt:
         name:  python3
         state: latest

     - name: Install Pip
       apt:
         name: pip
         state: latest

     - name: Install MySQL server
       apt:
         name: mysql-server
         state: latest

     - name: Install PyMySQL Library
       apt:
         name:  python3-mysqldb
         state: latest

     - name: Start the MySQL service
       service:
         name: mysql
         state: restarted
         enabled:


     - name: Reload all Privileges
       command: sudo systemctl enable --now mysql

     - name: Set MySQL root password
       mysql_user:
         name: "laravel"
         password: 12345678
         priv: "*.*:ALL,GRANT"
         host: "%"
         state: present


     - name: Create Database
       mysql_db:
         name: laravel
         state: present

     - name: Enable remote login to mysql
       lineinfile:
         path: /etc/mysql/mysql.conf.d/mysqld.cnf
         regexp: '^bind-address'
         line: 'bind-address = 0.0.0.0'
         backup: yes


 # start work
     - name: Change the working directory to /var/www/ and create skel directory
       command: mkdir laravel
       args:
         chdir: /var/www/
         creates: /var/www/laravel

     - name: Clone the project repo into a new directory
       git:
         repo: https://github.com/f1amy/laravel-realworld-example-app
         dest: /var/www/laravel
         clone: yes
         update: no

     - name: Create the web.php file in the routes directory
       copy:
         dest: /var/www/laravel/routes/web.php
         content: |
           <?php

           Route::get('/', function () {
               return view('welcome');
           });

     - name: Create an apache virtual host configuration file
       copy:
         dest: /var/www/laravel/.env
         content: |
           APP_NAME="Laravel Realworld Example App"
           APP_ENV=local
           APP_KEY=
           APP_DEBUG=true
           APP_URL=http://3.90.248.4
           APP_PORT=3000

           LOG_CHANNEL=stack
           LOG_DEPRECATIONS_CHANNEL=null
           LOG_LEVEL=debug

           DB_CONNECTION=mysql
           DB_HOST=127.0.0.1
           DB_PORT=3306
           DB_DATABASE=laravel
           DB_USERNAME=root
           DB_PASSWORD=12345678

           BROADCAST_DRIVER=log
           CACHE_DRIVER=file
           FILESYSTEM_DISK=local
           QUEUE_CONNECTION=sync
           SESSION_DRIVER=file
           SESSION_LIFETIME=120

           MEMCACHED_HOST=127.0.0.1

           REDIS_HOST=127.0.0.1
           REDIS_PASSWORD=null
           REDIS_PORT=6379

           MAIL_MAILER=smtp
           MAIL_HOST=mailhog
           MAIL_PORT=1025
           MAIL_USERNAME=null
           MAIL_PASSWORD=null
           MAIL_ENCRYPTION=null
           MAIL_FROM_ADDRESS="hello@example.com"
           MAIL_FROM_NAME="${APP_NAME}"

           AWS_ACCESS_KEY_ID=
           AWS_SECRET_ACCESS_KEY=
           AWS_DEFAULT_REGION=us-east-1
           AWS_BUCKET=
           AWS_USE_PATH_STYLE_ENDPOINT=false

           PUSHER_APP_ID=
           PUSHER_APP_KEY=
           PUSHER_APP_SECRET=
           PUSHER_APP_CLUSTER=mt1

           MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
           MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"

           L5_SWAGGER_GENERATE_ALWAYS=true
           SAIL_XDEBUG_MODE=develop,debug
           SAIL_SKIP_CHECKS=true


     # Composer
     - name: Download Composer Installer
       command: curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php

     - name: Verify Installation Script is Safe to Run
       command: $ php -r "if (hash_file('SHA384', '/tmp/composer-setup.php') === `curl -sS https://composer.github.io/installer.sig`) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"

     - name: Install Composer Globally
       command: $ sudo php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer

     - name: Make composer executable by user
       file:
         path: /tmp/composer-setup.php
         mode: '755'

     - name: Download and install all requirements outlined in the /var/www/laravel/composer.lock
       shell: composer install --no-interaction 
       args:
         chdir: /var/www/laravel


     # Remainder
     - name: Run the php artisan .... command
       shell: cd /var/www/laravel && php artisan key:generate
       args:
         chdir: /var/www/laravel

     - name: Run the php artisan .... command
       shell: php artisan config:cache
       args:
         chdir: /var/www/laravel

     - name: Run the php artisan .... command
       shell: php artisan migrate
       args:
         chdir: /var/www/laravel


     - name: Create an apache virtual host configuration file
       copy:
         dest: /etc/apache2/sites-available/laravel.conf
         content: |
           <VirtualHost *:80>
               ServerAdmin oilye.pw
               ServerName
               ServerAlias oilye.pw
               DocumentRoot /var/www/laravel/public

               <Directory /var/www/laravel/public>
                   AllowOverride All
               </Directory>

               ErrorLog ${APACHE_LOG_DIR}/error.log
               CustomLog ${APACHE_LOG_DIR}/access.log combined
           </VirtualHost>

     - name: Enable a2enmod rewrite
       command: a2dissite 000-default.conf
 
     - name: Disable default apache page and enable laravel page
       command: rm /etc/apache2/sites-available/000-default.conf

     - name: Enable laravel page
       command: a2ensite laravel.conf

     
     - name: Change file ownership, group and permissions
       file:
         path: /var/www/laravel
         state: directory
         recurse: yes
         owner: www-data
         group: www-data
         mode: '775'

     - name: Restart apache web server
       command: systemctl restart apache2

     - name: Transfer the script
       copy:
         src: ~/ansible/files/postgres.sh
         dest: /home/ansible
         mode: 0777

     - name: Execute postgress script
       command: sh /home/ansible/files/postgres.sh
